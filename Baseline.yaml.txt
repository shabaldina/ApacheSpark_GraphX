FROM jupyter/minimal-notebook

USER root

# Install software
RUN apt-get update && apt-get -y install postgresql-client libpq-dev nodejs jq redis-tools apt-transport-https gnupg2 curl apt-utils dnsutils && rm -rf /var/lib/apt/lists/*

# Install kubectl (https://kubernetes.io/docs/tasks/tools/install-kubectl/)
RUN curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
RUN echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
RUN apt-get update && apt-get install -y kubectl

# Install helm
RUN curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

# Add neo4j repo (https://neo4j.com/docs/operations-manual/current/installation/linux/debian/)
RUN wget -O - https://debian.neo4j.com/neotechnology.gpg.key | sudo apt-key add -
RUN echo 'deb https://debian.neo4j.com stable latest' | sudo tee -a /etc/apt/sources.list.d/neo4j.list
RUN apt-get update && apt-get -y install cypher-shell neo4j-client

# Add xidel
COPY --from=masavini/xidel:0.9.6-amd64 /usr/local/bin/xidel /usr/bin/xidel

USER $NB_USER

# Install requirements
COPY --chown=${NB_UID}:${NB_GID} requirements.txt /tmp/
RUN pip install --requirement /tmp/requirements.txt && \
	fix-permissions $CONDA_DIR && \
	fix-permissions /home/$NB_USER

# Install bash kernel
RUN python -m bash_kernel.install

# Remove default dir and set homedir as workdir
RUN rm -rf  /home/$NB_USER/work
WORKDIR /home/$NB_USER/

# Add data
COPY --chown=${NB_UID}:${NB_GID} data/ /home/$NB_USER/data/

# Add code
COPY --chown=${NB_UID}:${NB_GID} psycopg2/ /home/$NB_USER/psycopg2/
COPY --chown=${NB_UID}:${NB_GID} postgres/ /home/$NB_USER/postgres/
COPY --chown=${NB_UID}:${NB_GID} sqlalchemy/ /home/$NB_USER/sqlalchemy/
COPY --chown=${NB_UID}:${NB_GID} basex/ /home/$NB_USER/basex/
COPY --chown=${NB_UID}:${NB_GID} xidel/ /home/$NB_USER/xidel/
COPY --chown=${NB_UID}:${NB_GID} memcached/ /home/$NB_USER/memcached/
COPY --chown=${NB_UID}:${NB_GID} redis/ /home/$NB_USER/redis/
COPY --chown=${NB_UID}:${NB_GID} mongodb/ /home/$NB_USER/mongodb/
COPY --chown=${NB_UID}:${NB_GID} neo4j/ /home/$NB_USER/neo4j/
COPY --chown=${NB_UID}:${NB_GID} influxdb/ /home/$NB_USER/influxdb/
COPY --chown=${NB_UID}:${NB_GID} cassandra/ /home/$NB_USER/cassandra/

# Generate Jupyter notebooks from Markdown files and Python source files
ADD generate-notebooks.js /home/$NB_USER/
RUN node generate-notebooks.js && rm generate-notebooks.js